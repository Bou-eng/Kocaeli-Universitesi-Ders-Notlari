<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-9">
<link href="abstyle.css" rel="stylesheet" type="text/css">
<script language="JavaScript" type="text/JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
//-->
</script>
</head>

<body>
<table width="100%" border="0" cellpadding="15" cellspacing="0" class="content">
  <tr> 
    <td class="content"><p class="baslik">7.2.1. LL(k) Dilbilgileri</p>
      <p> LL(k) adlandýrmasýnda:</p>
      <ul>
        <li> ilk L ayrýþtýrýlacak sözcüðün soldan saða doðru tarandýðýný, </li>
        <li> ikinci L, ayrýþtýrýcýnýn soldan (sol öncelikli) türetme gerçekleþtirdiðini,</li>
        <li> k ise ileri-bakýþ simgesi sayýsýný</li>
      </ul>
      <p> gösterir. Buna göre baðlamdan-baðýmsýz bir dilbilgisinin <strong>LL(k)</strong> 
        dilbilgisi olmasý, bu dilbilgisi tarafýndan türetilen tümcelerin, soldan-saða 
        doðru taranarak ve k ileri-bakýþ simgesi kullanýlarak, yukarýdan-aþaðýya 
        türetme ile deterministik olarak ayrýþtýrýlabileceðini gösterir. </p>
      <p>Yukarýdan-aþaðýya ayrýþtýrma iþlemlerinde ileri-bakýþ tekniðinin kullanýlmasýný 
        bir örnekle göstermeye çalýþalým. Örnek olarak <strong>G<sub>7.3</sub></strong> 
        ile türetilen <strong>w = aababbaba</strong> sözcüðünün ayrýþtýrýlmasýný 
        düþünelim. Bu dilbilgisinin üç <strong>S</strong> kuralý vardýr. Ayrýþtýrma 
        iþleminin deterministik olmasýný saðlamak için, ayrýþtýrmanýn her adýmýnda 
        tek bir yeniden yazma kuralý kullanýlabilmelidir. <strong>w</strong>’nin 
        ilk simgesi <strong>a</strong>’dýr. <strong>S</strong> kurallarýndan ilk 
        ikisi kullanýlarak <strong>a</strong> ile baþlayan tümceler türetilebilir. 
        Ancak <strong>(S <img src="pics/symbols/ok.gif" align="absmiddle"> B)</strong> 
        kuralý kullanýlarak <strong>a</strong> ile baþlayan tümceler türetilemez. 
        Böylece <strong>w</strong>’nin ilk simgesine baktýðýmýzda kullanýlabilecek 
        kural sayýsýný üçten ikiye indirebiliriz. Ancak bu deterministik ayrýþtýrma 
        için yeterli deðildir. Oysa <strong>w</strong>’nin ilk iki simgesine baktýðýmýzda, 
        <strong>aa</strong> ile baþlayan tümcenin türetilebilmesi için ilk olarak 
        <strong>(S <img src="pics/symbols/ok.gif" align="absmiddle"> aS)</strong> 
        kuralýnýn kullanýlmasý gerektiði görülür. <strong>S <img src="pics/symbols/ok.gif" align="absmiddle"> 
        aS</strong> kuralý ile <strong>w</strong>’nin ilk simgesi türetilmiþ olur. 
        Bu aþamada sonraki iki simge <strong>ab</strong>’dir. <strong>ab</strong> 
        simgeleri, <strong>S</strong> kuralarýndan <strong>(S <img src="pics/symbols/ok.gif" align="absmiddle"> 
        aS)</strong> ya da <strong>(S <img src="pics/symbols/ok.gif" align="absmiddle"> 
        AB)</strong>’nin kullanýlabileceðini gösterir; ancak bu iki kuraldan hangisinin 
        kullanýlacaðýna karar vermek için yetersiz kalýr. Demek ki, <strong>G<sub>7.3</sub></strong> 
        dilbilgisi tarafýndan türetilen tümceler yukarýdan-aþaðýya ayrýþtýrýlýrken, 
        ayrýþtýrmanýn deterministik olmasý için iki ileri-bakýþ simgesi de yeterli 
        deðildir. Baþka bir deyiþle <strong>G<sub>7.3</sub></strong> bir <strong>LL(2)</strong> 
        dilbilgisi deðildir. Aslýnda bu dilbilgisi bir <strong>LL(k)</strong> 
        dilbilgisi deðildir.<strong> w = ababababab….</strong> örneðini düþünelim. 
        Bu sözcüðün türetilmesimde kullanýlan ilk kural <strong>(S <img src="pics/symbols/ok.gif" align="absmiddle"> 
        aS)</strong> ya da <strong>(S <img src="pics/symbols/ok.gif" align="absmiddle"> 
        AB)</strong> olabilir. Bu iki kuraldan hangisinin kullanýldýðýný belirleyebilmek 
        için ya sözcük sonunu ya da <strong>bb</strong> örüntüsünü görmek gerekir. 
      </p>
      <p class="yonelt">! Örneðin çözümlerini incelemek için &quot;1. Adým&quot;, 
        &quot;2. Adým&quot; düðmelerine týklayýnýz.</p>
      <p> 
        <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=5,0,0,0" width="590" height="300">
          <param name=movie value="pics/B07/BD07040.swf">
          <param name=quality value=high>
          <embed src="pics/B07/BD07040.swf" quality=high pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" width="590" height="300"> 
          </embed> </object>
      </p>
      </td>
  </tr>
</table>
</body>
</html>
